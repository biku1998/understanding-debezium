services:
  # PostgreSQL Source Database
  postgres-transactional:
    image: postgres:15
    container_name: postgres-transactional
    environment:
      POSTGRES_DB: ecommerce
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/transactional-init.sql:/docker-entrypoint-initdb.d/transactional-init.sql
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./transactional-pgdata:/var/lib/postgresql/data
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test:
        ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Kafka Connect with Debezium
  kafka-connect:
    image: debezium/connect:2.4
    container_name: kafka-connect
    depends_on:
      kafka:
        condition: service_healthy
      postgres-transactional:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      BOOTSTRAP_SERVERS: kafka:9092

  # Analytics PostgreSQL Database
  postgres-analytics:
    image: postgres:15
    container_name: postgres-analytics
    environment:
      POSTGRES_DB: analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - ./postgres/analytics-init.sql:/docker-entrypoint-initdb.d/analytics-init.sql
      - ./analytics-pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Transactional Dataloader
  transactional-dataloader:
    build: ./transactional-dataloader
    container_name: transactional-dataloader
    depends_on:
      kafka:
        condition: service_healthy
      postgres-transactional:
        condition: service_healthy
    environment:
      TRANSACTIONAL_DB_HOST: postgres-transactional
      TRANSACTIONAL_DB_PORT: 5432
      TRANSACTIONAL_DB_NAME: ecommerce
      TRANSACTIONAL_DB_USER: postgres
      TRANSACTIONAL_DB_PASSWORD: postgres
    volumes:
      - ./transactional-dataloader:/app/transactional-dataloader

  # Analytics Consumer
  analytics-consumer:
    build: ./analytics-consumer
    container_name: analytics-consumer
    depends_on:
      kafka:
        condition: service_healthy
      postgres-analytics:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      ANALYTICS_DB_HOST: postgres-analytics
      ANALYTICS_DB_PORT: 5432
      ANALYTICS_DB_NAME: analytics
      ANALYTICS_DB_USER: postgres
      ANALYTICS_DB_PASSWORD: postgres
    volumes:
      - ./analytics-consumer:/app/analytics-consumer
    restart: unless-stopped
